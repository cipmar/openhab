Thing mqtt:broker:a188c31189 "MQTT Broker" [
    clientid = "cfcda536-b860-472f-8463-42bae05b3722", 
    publickeypin = true,
    lwtQos = 0,
    keepAlive = 60,
    qos = 0,
    reconnectTime = 60000,
    port = 1883,
    host = "localhost",
    secure = false,
    certificatepin = true,
    lwtRetain = true,
    enableDiscovery = true
]

Thing sonoff:4:6cfc5a5eaa:10013b65a1 "Irrigation" (sonoff:account:6cfc5a5eaa) @ "Garden" [deviceid = "10013b65a1"]

Thing daikin:ac_unit:192_168_100_195 "Daikin AC Unit" [host = "192.168.100.194", secure = false, refresh = 60]

Thing mqtt:topic:a188c31189:heating_salus "Heating Relay" (mqtt:broker:a188c31189) {
    Channels:
        Type switch : power "Power" [commandTopic = "zigbee2mqtt/heating_salus/set",   stateTopic = "zigbee2mqtt/heating_salus", transformationPattern = "JSONPATH:$.state"]
}

Thing mqtt:topic:a188c31189:thermometer_bedroom "Thermometer Bedroom" (mqtt:broker:a188c31189) {
    Channels:
        Type number : temperature_bedroom "Temperature" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.temperature"]
        Type number : humidity_bedroom "Humidity" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.humidity"]
        Type number : pressure_bedroom "Pressure" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.pressure"]
        Type number : linkquality_bedroom "Link Quality" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.linkquality"]
        Type number : battery_bedroom "Battery" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.battery"]
        Type number : voltage_bedroom "Voltage" [stateTopic = "zigbee2mqtt/thermometer_bedroom", transformationPattern = "JSONPATH:$.voltage"]
}

Thing mqtt:topic:a188c31189:thermometer_childroom "Thermometer Childroom" (mqtt:broker:a188c31189) {
    Channels:
        Type number : temperature_childroom "Temperature" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.temperature"]
        Type number : humidity_childroom "Humidity" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.humidity"]
        Type number : pressure_childroom "Pressure" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.pressure"]
        Type number : linkquality_childroom "Link Quality" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.linkquality"]
        Type number : battery_childroom "Battery" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.battery"]
        Type number : voltage_childroom "Voltage" [stateTopic = "zigbee2mqtt/thermometer_childroom", transformationPattern = "JSONPATH:$.voltage"]
}

Thing mqtt:topic:a188c31189:thermometer_living "Thermometer Living" (mqtt:broker:a188c31189) {
    Channels:
        Type number : temperature_living "Temperature" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.temperature"]
        Type number : humidity_living "Humidity" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.humidity"]
        Type number : pressure_living "Pressure" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.pressure"]
        Type number : linkquality_living "Link Quality" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.linkquality"]
        Type number : battery_living "Battery" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.battery"]
        Type number : voltage_living "Voltage" [stateTopic = "zigbee2mqtt/thermometer_living", transformationPattern = "JSONPATH:$.voltage"]
}

Thing mqtt:topic:a188c31189:door_senzor1 "Window Sensor" (mqtt:broker:a188c31189) {
    Channels:
        Type contact : window_open_close "Window Open Close" [stateTopic = "zigbee2mqtt/door_senzor1", transformationPattern = "JSONPATH:$.contact", off = "true", on = "false"]
        Type number : battery "Battery" [stateTopic = "zigbee2mqtt/door_senzor1", transformationPattern = "JSONPATH:$.battery"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/door_senzor1", transformationPattern = "JSONPATH:$.linkquality"]
        Type number : temperature "Temperature" [stateTopic = "zigbee2mqtt/door_senzor1", transformationPattern = "JSONPATH:$.temperature"]
        Type number : voltage "Voltage" [stateTopic = "zigbee2mqtt/door_senzor1", transformationPattern = "JSONPATH:$.voltage"]
}

Thing mqtt:topic:a188c31189:button1 "Button" (mqtt:broker:a188c31189) {
    Channels:
        Type string : action "Action" [stateTopic = "zigbee2mqtt/button1", transformationPattern = "JSONPATH:$.action"]
        Type number : battery "Battery" [stateTopic = "zigbee2mqtt/button1", transformationPattern = "JSONPATH:$.battery"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/button1", transformationPattern = "JSONPATH:$.linkquality"]
        Type number : voltage "Voltage" [stateTopic = "zigbee2mqtt/button1", transformationPattern = "JSONPATH:$.voltage"]
}

Thing openweathermap:weather-and-forecast:1be22a6f73:local "Weather and Forecast" (openweathermap:weather-api:1be22a6f73) [forecastDays = 1, location = "47.134669501601344,27.55429565906525", forecastHours = 96 ]

Thing openweathermap:air-pollution:1be22a6f73:local "Air Pollution" (openweathermap:weather-api:1be22a6f73) [location = "47.134669501601344,27.55429565906525", forecastHours = 0 ]

Thing mqtt:topic:a188c31189:switch_bedroom "Switch Bedroom" (mqtt:broker:a188c31189) {
    Channels:
        Type switch : switch_bedroom "Switch Bedroom" [commandTopic = "zigbee2mqtt/switch_bedroom/set", stateTopic = "zigbee2mqtt/switch_bedroom", transformationPattern = "JSONPATH:$.state", off = "OFF", on = "ON"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/switch_bedroom", transformationPattern = "JSONPATH:$.linkquality"]
}

Thing mqtt:topic:switch_living "Switch Couch" (mqtt:broker:a188c31189) {
    Channels:
        Type switch : switch_living "Switch Couch" [commandTopic = "zigbee2mqtt/switch_living/set", stateTopic = "zigbee2mqtt/switch_living", transformationPattern = "JSONPATH:$.state", off = "OFF", on = "ON"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/switch_living", transformationPattern = "JSONPATH:$.linkquality"]
}

Thing mqtt:topic:a188c31189:switch_living2 "Switch Living" (mqtt:broker:a188c31189) {
    Channels:
        Type switch : switch_living2 "Switch Living" [commandTopic = "zigbee2mqtt/switch_living2/set", stateTopic = "zigbee2mqtt/switch_living2", transformationPattern = "JSONPATH:$.state", off = "OFF", on = "ON"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/switch_living", transformationPattern = "JSONPATH:$.linkquality"]
}

Thing mqtt:topic:a188c31189:78021203b0 "Raspberry" (mqtt:broker:a188c31189) {
    Channels:
        Type number : mqtt_cpu_temperature "CPU Temperature" [stateTopic = "mqtt/cputemp"]
        Type number : mqtt_free_memory "Free Memory" [stateTopic = "mqtt/freemem"]
        Type number : mqtt_free_disk "Free Disk" [stateTopic = "mqtt/freedisk"]
}

Thing mqtt:topic:tablet_statue "Tablet Status" (mqtt:broker:a188c31189) {
    Channels:
        Type number : tablet_battery "Battery" [stateTopic = "fully/deviceInfo/tablet", transformationPattern = "JSONPATH:$.batteryLevel"]
        Type string : tablet_plugged "Plugged" [stateTopic = "fully/deviceInfo/tablet", transformationPattern = "JSONPATH:$.plugged"]
        Type number : tablet_free_memory "Free Memory" [stateTopic = "fully/deviceInfo/tablet", transformationPattern = "JSONPATH:$.ramFreeMemory"]
        Type number : tablet_wifisignal "WIFI Signal" [stateTopic = "fully/deviceInfo/tablet", transformationPattern = "JSONPATH:$.wifiSignalLevel"]
        Type number : tablet_batteryTemperature "Battery Temperature" [stateTopic = "fully/deviceInfo/tablet", transformationPattern = "JSONPATH:$.batteryTemperature"]
}

Thing mqtt:topic:philips_lightstrip "Philips Lightstrip" (mqtt:broker:a188c31189) {
    Channels:
        Type switch : state "State" [commandTopic = "zigbee2mqtt/lightstrip_philips/set", stateTopic = "zigbee2mqtt/lightstrip_philips", transformationPattern = "JSONPATH:$.state", off = "OFF", on = "TOGGLE"]
        Type number : brightness "Brightness" [commandTopic = "zigbee2mqtt/lightstrip_philips/set", stateTopic = "zigbee2mqtt/lightstrip_philips", transformationPatternOut = "JS:brightness.js", transformationPattern = "JSONPATH:$.brightness"]
        Type color : color "Color" [commandTopic = "zigbee2mqtt/lightstrip_philips/set", transformationPatternOut = "JS:rgb.js", colorMode = "RGB"]
        Type string : effect "Effect" [commandTopic = "zigbee2mqtt/lightstrip_philips/set", transformationPatternOut = "JS:effect.js"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/lightstrip_philips", transformationPattern = "JSONPATH:$.linkquality"]
}

Thing tapocontrol:P100:5cd79ad614 "Plug - Tablet" (tapocontrol:bridge:1043758637) [ipAddress = "192.168.100.126", pollingInterval = 10 ]

Thing mqtt:topic:plug_kitchen "Plug - Daikin" (mqtt:broker:a188c31189) {
    Channels:
        Type number : power "Power" [stateTopic = "zigbee2mqtt/plug_kitchen", transformationPattern = "JSONPATH:$.power"]
        Type number : energy "Energy" [stateTopic = "zigbee2mqtt/plug_kitchen", transformationPattern = "JSONPATH:$.energy"]
        Type number : temperature "Temperature" [stateTopic = "zigbee2mqtt/plug_kitchen", transformationPattern = "JSONPATH:$.device_temperature"]
        Type number : linkquality "Linkquality" [stateTopic = "zigbee2mqtt/plug_kitchen", transformationPattern = "JSONPATH:$.linkquality"]
        Type switch : switch "Switch" [commandTopic = "zigbee2mqtt/plug_kitchen/set", stateTopic = "zigbee2mqtt/plug_kitchen", transformationPattern = "JSONPATH:$.state", off = "OFF", on = "ON"]
}

Thing miio:vacuum:8381e35a0e "Roborock" [
    refreshInterval = 30,
    host = "192.168.100.222",
    model = "roborock.vacuum.s5",
    communication = "direct",
    deviceId = "261389551",
    timeout = 15000,
    token = "79316672335964766a47344367393646"
]

Thing hpprinter:printer:HP_Printer "HP Printer" [ipAddress = "192.168.100.137", statusInterval = 4, usageInterval = 30]
